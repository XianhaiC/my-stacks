!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
App	App.js	/^function App() {$/;"	f
AuthRoute	util/AuthRoute.js	/^const AuthRoute = ({$/;"	c
Background	components/common/Background.js	/^const Background = (props) => {$/;"	C
DATA_CLEAR	redux/types.js	/^export const DATA_CLEAR = 'DATA_CLEAR';$/;"	C
DATA_SET_BLOCK	redux/types.js	/^export const DATA_SET_BLOCK = 'DATA_SET_BLOCK';$/;"	C
DATA_SET_BLOCKS	redux/types.js	/^export const DATA_SET_BLOCKS = 'DATA_SET_BLOCKS';$/;"	C
DATA_SET_STACK	redux/types.js	/^export const DATA_SET_STACK = 'DATA_SET_STACK';$/;"	C
DATA_SET_STACKS	redux/types.js	/^export const DATA_SET_STACKS = 'DATA_SET_STACKS';$/;"	C
DISPLAY_PLAYLIST	util/constants.js	/^export const DISPLAY_PLAYLIST = 0;$/;"	C
DISPLAY_STACK	util/constants.js	/^export const DISPLAY_STACK = 1;$/;"	C
Display	components/Display.js	/^class Display extends Component {$/;"	c
EMAIL_REGEX	util/constants.js	/^export const EMAIL_REGEX =$/;"	C
FOCUS_EDIT	util/constants.js	/^export const FOCUS_EDIT = 2;$/;"	C
FOCUS_NONE	util/constants.js	/^export const FOCUS_NONE = 0;$/;"	C
FOCUS_SHOW	util/constants.js	/^export const FOCUS_SHOW = 1;$/;"	C
INITIAL_STATE	redux/reducers/dataReducer.js	/^const INITIAL_STATE = {$/;"	c
INITIAL_STATE	redux/reducers/playlistReducer.js	/^const INITIAL_STATE = {$/;"	c
INITIAL_STATE	redux/reducers/sessionReducer.js	/^const INITIAL_STATE = {$/;"	c
INITIAL_STATE	redux/reducers/stackReducer.js	/^const INITIAL_STATE = {$/;"	c
INITIAL_STATE	redux/store.js	/^const INITIAL_STATE = {};$/;"	C
LandingDisplay	components/landing/Landing.js	/^const LandingDisplay = (props) => {$/;"	C
LinkButton	util/LinkButton.js	/^const LinkButton = (props) => {$/;"	C
Login	components/landing/Login.js	/^class Login extends Component {$/;"	c
PATH_APP	util/constants.js	/^export const PATH_APP = '\/app';$/;"	C
PATH_LOGIN	util/constants.js	/^export const PATH_LOGIN = '\/login';$/;"	C
PATH_ROOT	util/constants.js	/^export const PATH_ROOT = '\/';$/;"	C
PATH_SIGNUP	util/constants.js	/^export const PATH_SIGNUP = '\/signup';$/;"	C
PLAYLIST_ADD_COMPLETED_BLOCKS	redux/types.js	/^export const PLAYLIST_ADD_COMPLETED_BLOCKS = 'PLAYLIST_ADD_COMPLETED_BLOCKS';$/;"	C
PLAYLIST_CLEAR	redux/types.js	/^export const PLAYLIST_CLEAR = 'PLAYLIST_CLEAR';$/;"	C
PLAYLIST_CLEAR_COMPLETED_BLOCKS	redux/types.js	/^export const PLAYLIST_CLEAR_COMPLETED_BLOCKS =$/;"	C
PLAYLIST_MODE_BREAK	util/constants.js	/^export const PLAYLIST_MODE_BREAK = 1;$/;"	C
PLAYLIST_MODE_GRACE	util/constants.js	/^export const PLAYLIST_MODE_GRACE = 2;$/;"	C
PLAYLIST_MODE_WORK	util/constants.js	/^export const PLAYLIST_MODE_WORK = 0;$/;"	C
PLAYLIST_SET_FOCUS_CURRENT	redux/types.js	/^export const PLAYLIST_SET_FOCUS_CURRENT = 'PLAYLIST_SET_FOCUS_CURRENT';$/;"	C
PLAYLIST_SET_FOCUS_FINISHED	redux/types.js	/^export const PLAYLIST_SET_FOCUS_FINISHED = 'PLAYLIST_SET_FOCUS_FINISHED';$/;"	C
PLAYLIST_SET_FOCUS_INITIAL	redux/types.js	/^export const PLAYLIST_SET_FOCUS_INITIAL = 'PLAYLIST_SET_FOCUS_INITIAL';$/;"	C
PLAYLIST_SET_FOCUS_REMAINING	redux/types.js	/^export const PLAYLIST_SET_FOCUS_REMAINING = 'PLAYLIST_SET_FOCUS_REMAINING';$/;"	C
PLAYLIST_SET_INITIAL_SHUFFLE	redux/types.js	/^export const PLAYLIST_SET_INITIAL_SHUFFLE = 'PLAYLIST_SET_INITIAL_SHUFFLE';$/;"	C
PLAYLIST_SET_MODE	redux/types.js	/^export const PLAYLIST_SET_MODE = 'PLAYLIST_SET_MODE';$/;"	C
PlaylistContainer	components/playlist/PlaylistContainer.js	/^const PlaylistContainer = (props) => {$/;"	C
PlaylistDisplay	components/playlist/PlaylistDisplay.js	/^const PlaylistDisplay = (props) => {$/;"	C
PlaylistDock	components/playlist/PlaylistDock.js	/^class PlaylistDock extends Component {$/;"	c
SESSION_CLEAR	redux/types.js	/^export const SESSION_CLEAR = 'SESSION_CLEAR';$/;"	C
SESSION_ERRORS_SET	redux/types.js	/^export const SESSION_ERRORS_SET = 'SESSION_ERRORS_SET';$/;"	C
SESSION_LOADING_BLOCKS	redux/types.js	/^export const SESSION_LOADING_BLOCKS = 'SESSION_LOADING_BLOCKS';$/;"	C
SESSION_LOADING_LANDING	redux/types.js	/^export const SESSION_LOADING_LANDING = 'SESSION_LOADING_LANDING';$/;"	C
SESSION_LOADING_STACKS	redux/types.js	/^export const SESSION_LOADING_STACKS = 'SESSION_LOADING_STACKS';$/;"	C
SESSION_SET_AUTHENTICATED	redux/types.js	/^export const SESSION_SET_AUTHENTICATED = 'SESSION_SET_AUTHENTICATED';$/;"	C
SESSION_SET_DISPLAY	redux/types.js	/^export const SESSION_SET_DISPLAY = 'SESSION_SET_DISPLAY';$/;"	C
SESSION_SET_USER	redux/types.js	/^export const SESSION_SET_USER = 'SESSION_SET_USER';$/;"	C
STACK_CLEAR	redux/types.js	/^export const STACK_CLEAR = 'STACK_CLEAR';$/;"	C
STACK_SET_POPUP_VISIBLE_CREATE_STACK	redux/types.js	/^export const STACK_SET_POPUP_VISIBLE_CREATE_STACK =$/;"	C
STACK_SET_POPUP_VISIBLE_EDIT_STACK	redux/types.js	/^export const STACK_SET_POPUP_VISIBLE_EDIT_STACK =$/;"	C
STACK_SET_POPUP_VISIBLE_OPTIONS_SIDEBAR	redux/types.js	/^export const STACK_SET_POPUP_VISIBLE_OPTIONS_SIDEBAR =$/;"	C
STACK_SET_POPUP_VISIBLE_OPTIONS_STACK	redux/types.js	/^export const STACK_SET_POPUP_VISIBLE_OPTIONS_STACK =$/;"	C
STACK_SET_SIDEBAR_VISIBLE	redux/types.js	/^export const STACK_SET_SIDEBAR_VISIBLE = 'STACK_SET_SIDEBAR_VISIBLE';$/;"	C
STACK_SET_STACK_FOCUSED	redux/types.js	/^export const STACK_SET_STACK_FOCUSED = 'STACK_SET_STACK_FOCUSED';$/;"	C
Sidebar	components/stack/Sidebar.js	/^class Sidebar extends Component {$/;"	c
Signup	components/landing/Signup.js	/^class Signup extends Component {$/;"	c
StackContainer	components/stack/StackContainer.js	/^class StackContainer extends Component {$/;"	c
StackDisplay	components/stack/StackDisplay.js	/^const StackDisplay = (props) => {$/;"	C
StackDock	components/stack/StackDock.js	/^class StackDock extends Component {$/;"	c
StackItem	components/stack/StackItem.js	/^class StackItem extends Component {$/;"	c
StackList	components/stack/StackList.js	/^class StackList extends Component {$/;"	c
auth	util/AuthRoute.js	/^  auth: PropTypes.bool.isRequired,$/;"	p	class:AuthRoute.propTypes
authenticated	App.js	/^let authenticated;$/;"	v
authenticated	redux/reducers/sessionReducer.js	/^  authenticated: false,$/;"	p	class:INITIAL_STATE
authenticated	util/AuthRoute.js	/^  authenticated: PropTypes.bool.isRequired,$/;"	p	class:AuthRoute.propTypes
backgroundColor	components/stack/Sidebar.js	/^      backgroundColor: 'default',$/;"	p	class:Sidebar.constructor.state
blockId	components/stack/StackItem.js	/^  blockId: PropTypes.string.isRequired,$/;"	p	class:StackItem.propTypes
blocks	components/playlist/PlaylistDock.js	/^  blocks: PropTypes.object.isRequired,$/;"	p	class:PlaylistDock.propTypes
blocks	components/stack/StackItem.js	/^  blocks: PropTypes.object.isRequired,$/;"	p	class:StackItem.propTypes
blocks	redux/reducers/dataReducer.js	/^  blocks: {},$/;"	p	class:INITIAL_STATE
body	App.css	/^html, body {$/;"	s
burstCurrent	components/playlist/PlaylistDock.js	/^      burstCurrent: 0,$/;"	p	class:PlaylistDock.constructor.state
children	components/common/Background.js	/^  children: PropTypes.node.isRequired,$/;"	p	class:Background.propTypes
children	util/LinkButton.js	/^  children: PropTypes.node.isRequired,$/;"	p	class:LinkButton.propTypes
completedBlocks	redux/reducers/playlistReducer.js	/^  completedBlocks: {},$/;"	p	class:INITIAL_STATE
component	util/AuthRoute.js	/^  component: Component,$/;"	p	class:AuthRoute
componentDidMount	components/playlist/PlaylistDock.js	/^  componentDidMount() {$/;"	m	class:PlaylistDock
componentDidMount	components/stack/StackList.js	/^  componentDidMount() {$/;"	m	class:StackList
componentDidUpdate	components/stack/StackList.js	/^  componentDidUpdate() {$/;"	m	class:StackList
componentWillUnmount	components/playlist/PlaylistDock.js	/^  componentWillUnmount() {$/;"	m	class:PlaylistDock
constructor	components/landing/Login.js	/^  constructor() {$/;"	m	class:Login
constructor	components/landing/Signup.js	/^  constructor() {$/;"	m	class:Signup
constructor	components/playlist/PlaylistDock.js	/^  constructor() {$/;"	m	class:PlaylistDock
constructor	components/stack/Sidebar.js	/^  constructor() {$/;"	m	class:Sidebar
constructor	components/stack/StackDock.js	/^  constructor() {$/;"	m	class:StackDock
constructor	components/stack/StackItem.js	/^  constructor() {$/;"	m	class:StackItem
constructor	components/stack/StackList.js	/^  constructor(props) {$/;"	m	class:StackList
countDown	components/playlist/PlaylistDock.js	/^  countDown() {$/;"	m	class:PlaylistDock
dataBlockCreate	components/stack/StackList.js	/^  dataBlockCreate: PropTypes.func.isRequired,$/;"	p	class:StackList.propTypes
dataBlockCreate	redux/actions/dataActions.js	/^export const dataBlockCreate = (blockData) => (dispatch) => {$/;"	C
dataBlockDelete	redux/actions/dataActions.js	/^export const dataBlockDelete = () => (dispatch) => {$/;"	C
dataBlockUpdate	redux/actions/dataActions.js	/^export const dataBlockUpdate = () => (dispatch) => {$/;"	C
dataStackCreate	components/stack/Sidebar.js	/^  dataStackCreate: PropTypes.func.isRequired,$/;"	p	class:Sidebar.propTypes
dataStackCreate	redux/actions/dataActions.js	/^export const dataStackCreate = (stackData) => (dispatch) => {$/;"	C
dataStackDelete	redux/actions/dataActions.js	/^export const dataStackDelete = () => (dispatch) => {$/;"	C
dataStackUpdate	redux/actions/dataActions.js	/^export const dataStackUpdate = () => (dispatch) => {$/;"	C
decodedToken	App.js	/^  const decodedToken = jwtDecode(token);$/;"	C
description	components/stack/StackList.js	/^      description: '',$/;"	p	class:StackList.constructor.state
display	components/Display.js	/^  display: PropTypes.number.isRequired,$/;"	p	class:Display.propTypes
display	redux/reducers/sessionReducer.js	/^  display: DISPLAY_STACK,$/;"	p	class:INITIAL_STATE
durationBreak	components/stack/StackList.js	/^      durationBreak: 600,$/;"	p	class:StackList.constructor.state
durationGrace	components/stack/Sidebar.js	/^      durationGrace: 900,$/;"	p	class:Sidebar.constructor.state
durationWork	components/stack/StackList.js	/^      durationWork: 1500,$/;"	p	class:StackList.constructor.state
email	components/landing/Login.js	/^      email: '',$/;"	p	class:Login.constructor.state
email	components/landing/Signup.js	/^      email: '',$/;"	p	class:Signup.constructor.state
enabledPause	components/playlist/PlaylistDock.js	/^      enabledPause: false,$/;"	p	class:PlaylistDock.constructor.state
enabledShuffle	components/playlist/PlaylistDock.js	/^      enabledShuffle: false,$/;"	p	class:PlaylistDock.constructor.state
endPlaylist	components/playlist/PlaylistDock.js	/^  endPlaylist() {$/;"	m	class:PlaylistDock
errors	redux/reducers/sessionReducer.js	/^  errors: {},$/;"	p	class:INITIAL_STATE
fetchBlocks	components/stack/StackList.js	/^  fetchBlocks() {$/;"	m	class:StackList
focusCurrent	components/playlist/PlaylistDock.js	/^  focusCurrent: PropTypes.string,$/;"	p	class:PlaylistDock.propTypes
focusCurrent	redux/reducers/playlistReducer.js	/^  focusCurrent: null,$/;"	p	class:INITIAL_STATE
focusFinished	redux/reducers/playlistReducer.js	/^  focusFinished: [],$/;"	p	class:INITIAL_STATE
focusFinishedNew	redux/actions/playlistActions.js	/^  const focusFinishedNew = [$/;"	C
focusInitial	redux/reducers/playlistReducer.js	/^  focusInitial: [],$/;"	p	class:INITIAL_STATE
focusRemaining	components/playlist/PlaylistDock.js	/^  focusRemaining: PropTypes.array.isRequired,$/;"	p	class:PlaylistDock.propTypes
focusRemaining	redux/reducers/playlistReducer.js	/^  focusRemaining: [],$/;"	p	class:INITIAL_STATE
focusState	components/stack/StackItem.js	/^      focusState: FOCUS_NONE,$/;"	p	class:StackItem.constructor.state
handleBlockCreate	components/stack/StackList.js	/^  handleBlockCreate(e) {$/;"	m	class:StackList
handleChangeDescription	components/stack/StackList.js	/^  handleChangeDescription(e) {$/;"	m	class:StackList
handleChangeDurationBreak	components/stack/StackList.js	/^  handleChangeDurationBreak(e) {$/;"	m	class:StackList
handleChangeDurationWork	components/stack/StackList.js	/^  handleChangeDurationWork(e) {$/;"	m	class:StackList
handleChangeEmail	components/landing/Login.js	/^  handleChangeEmail(e) {$/;"	m	class:Login
handleChangeEmail	components/landing/Signup.js	/^  handleChangeEmail(e) {$/;"	m	class:Signup
handleChangeName	components/stack/Sidebar.js	/^  handleChangeName(e) {$/;"	m	class:Sidebar
handleChangePassword	components/landing/Login.js	/^  handleChangePassword(e) {$/;"	m	class:Login
handleChangePassword	components/landing/Signup.js	/^  handleChangePassword(e) {$/;"	m	class:Signup
handleChangePasswordConfirm	components/landing/Signup.js	/^  handleChangePasswordConfirm(e) {$/;"	m	class:Signup
handleChangeTask	components/stack/StackList.js	/^  handleChangeTask(e) {$/;"	m	class:StackList
handleClickFinish	components/playlist/PlaylistDock.js	/^  handleClickFinish() {$/;"	m	class:PlaylistDock
handleClickOptions	components/stack/Sidebar.js	/^  handleClickOptions() {$/;"	m	class:Sidebar
handleClickPause	components/playlist/PlaylistDock.js	/^  handleClickPause() {$/;"	m	class:PlaylistDock
handleClickRestart	components/playlist/PlaylistDock.js	/^  handleClickRestart() {$/;"	m	class:PlaylistDock
handleClickShuffle	components/playlist/PlaylistDock.js	/^  handleClickShuffle() {$/;"	m	class:PlaylistDock
handleClickShuffle	components/stack/StackDock.js	/^  handleClickShuffle() {$/;"	m	class:StackDock
handleClickSkip	components/playlist/PlaylistDock.js	/^  handleClickSkip() {$/;"	m	class:PlaylistDock
handleClickStart	components/stack/StackDock.js	/^  handleClickStart() {$/;"	m	class:StackDock
handleStackCreate	components/stack/Sidebar.js	/^  handleStackCreate(e) {$/;"	m	class:Sidebar
handleSubmit	components/landing/Login.js	/^  handleSubmit(e) {$/;"	m	class:Login
handleSubmit	components/landing/Signup.js	/^  handleSubmit(e) {$/;"	m	class:Signup
history	util/LinkButton.js	/^  history: PropTypes.object.isRequired,$/;"	p	class:LinkButton.propTypes
hover	components/stack/StackItem.js	/^      hover: false,$/;"	p	class:StackItem.constructor.state
html	App.css	/^html, body {$/;"	s
initialShuffle	redux/reducers/playlistReducer.js	/^  initialShuffle: false,$/;"	p	class:INITIAL_STATE
isRoutine	components/stack/Sidebar.js	/^      isRoutine: false,$/;"	p	class:Sidebar.constructor.state
loadingBlocks	components/stack/StackList.js	/^  loadingBlocks: PropTypes.bool.isRequired,$/;"	p	class:StackList.propTypes
loadingBlocks	redux/reducers/sessionReducer.js	/^  loadingBlocks: false,$/;"	p	class:INITIAL_STATE
loadingLanding	redux/reducers/sessionReducer.js	/^  loadingLanding: false,$/;"	p	class:INITIAL_STATE
loadingStacks	redux/reducers/sessionReducer.js	/^  loadingStacks: false,$/;"	p	class:INITIAL_STATE
mapDispatchToProps	components/landing/Signup.js	/^const mapDispatchToProps = {$/;"	C
mapDispatchToProps	components/playlist/PlaylistDock.js	/^const mapDispatchToProps = {$/;"	C
mapDispatchToProps	components/stack/Sidebar.js	/^const mapDispatchToProps = {$/;"	C
mapDispatchToProps	components/stack/StackList.js	/^const mapDispatchToProps = {$/;"	C
mapStateToProps	components/Display.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	components/playlist/PlaylistDock.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	components/stack/Sidebar.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	components/stack/StackDock.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	components/stack/StackItem.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	components/stack/StackList.js	/^const mapStateToProps = (state) => ({$/;"	C
mapStateToProps	util/AuthRoute.js	/^const mapStateToProps = (state) => ({$/;"	C
middleware	redux/store.js	/^const middleware = [thunk];$/;"	C
modDescription	components/stack/StackItem.js	/^      modDescription: null,$/;"	p	class:StackItem.constructor.state
modDurationBreak	components/stack/StackItem.js	/^      modDurationBreak: null,$/;"	p	class:StackItem.constructor.state
modDurationWork	components/stack/StackItem.js	/^      modDurationWork: null,$/;"	p	class:StackItem.constructor.state
modTitle	components/stack/StackItem.js	/^      modTitle: null,$/;"	p	class:StackItem.constructor.state
modeTimeRemaining	components/playlist/PlaylistDock.js	/^      modeTimeRemaining: 0,$/;"	p	class:PlaylistDock.constructor.state
name	components/stack/Sidebar.js	/^      name: '',$/;"	p	class:Sidebar.constructor.state
newState	redux/reducers/dataReducer.js	/^  let newState;$/;"	v
numBursts	components/stack/StackList.js	/^      numBursts: 3,$/;"	p	class:StackList.constructor.state
onClick	util/LinkButton.js	/^  onClick: PropTypes.func,$/;"	p	class:LinkButton.propTypes
password	components/landing/Login.js	/^      password: '',$/;"	p	class:Login.constructor.state
password	components/landing/Signup.js	/^      password: '',$/;"	p	class:Signup.constructor.state
passwordConfirm	components/landing/Signup.js	/^      passwordConfirm: '',$/;"	p	class:Signup.constructor.state
playlistAddCompletedBlocks	redux/actions/playlistActions.js	/^export const playlistAddCompletedBlocks = (blockId) => (dispatch) => {$/;"	C
playlistCheckoff	components/playlist/PlaylistDock.js	/^  playlistCheckoff: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistCheckoff	redux/actions/playlistActions.js	/^export const playlistCheckoff = (blockId, done) => (dispatch, getState) => {$/;"	C
playlistClearCompletedBlock	redux/actions/playlistActions.js	/^export const playlistClearCompletedBlock = () => (dispatch) => {$/;"	C
playlistEnd	components/playlist/PlaylistDock.js	/^  playlistEnd: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistEnd	redux/actions/playlistActions.js	/^export const playlistEnd = () => (dispatch) => {$/;"	C
playlistMode	components/playlist/PlaylistDock.js	/^  playlistMode: PropTypes.number.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistMode	redux/reducers/playlistReducer.js	/^  playlistMode: PLAYLIST_MODE_WORK,$/;"	p	class:INITIAL_STATE
playlistPreprocess	components/stack/StackDock.js	/^  playlistPreprocess(shuffle) {$/;"	m	class:StackDock
playlistSetFocusCurrent	components/playlist/PlaylistDock.js	/^  playlistSetFocusCurrent: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistSetFocusCurrent	redux/actions/playlistActions.js	/^export const playlistSetFocusCurrent = (blockId) => (dispatch) => {$/;"	C
playlistSetFocusFinished	components/playlist/PlaylistDock.js	/^  playlistSetFocusFinished: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistSetFocusFinished	redux/actions/playlistActions.js	/^export const playlistSetFocusFinished = (blockIds) => (dispatch) => {$/;"	C
playlistSetFocusInitial	redux/actions/playlistActions.js	/^export const playlistSetFocusInitial = (blockIds) => (dispatch) => {$/;"	C
playlistSetFocusRemaining	components/playlist/PlaylistDock.js	/^  playlistSetFocusRemaining: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistSetFocusRemaining	redux/actions/playlistActions.js	/^export const playlistSetFocusRemaining = (blockIds) => (dispatch) => {$/;"	C
playlistSetMode	components/playlist/PlaylistDock.js	/^  playlistSetMode: PropTypes.func.isRequired,$/;"	p	class:PlaylistDock.propTypes
playlistSetMode	redux/actions/playlistActions.js	/^export const playlistSetMode = (mode) => (dispatch) => {$/;"	C
playlistStackEmpty	components/playlist/PlaylistDock.js	/^  playlistStackEmpty() {$/;"	m	class:PlaylistDock
playlistStackPop	components/playlist/PlaylistDock.js	/^  playlistStackPop() {$/;"	m	class:PlaylistDock
playlistStart	components/stack/StackDock.js	/^  playlistStart: PropTypes.func.isRequired,$/;"	p	class:StackDock.propTypes
playlistStart	redux/actions/playlistActions.js	/^export const playlistStart = (blockIds, shuffle) => (dispatch) => {$/;"	C
playlistState	redux/actions/playlistActions.js	/^  const playlistState = getState().playlist;$/;"	C
popupVisibleCreateStack	redux/reducers/stackReducer.js	/^  popupVisibleCreateStack: false,$/;"	p	class:INITIAL_STATE
popupVisibleEditStack	redux/reducers/stackReducer.js	/^  popupVisibleEditStack: false,$/;"	p	class:INITIAL_STATE
popupVisibleOptionsSidebar	redux/reducers/stackReducer.js	/^  popupVisibleOptionsSidebar: false,$/;"	p	class:INITIAL_STATE
popupVisibleOptionsStack	redux/reducers/stackReducer.js	/^  popupVisibleOptionsStack: false,$/;"	p	class:INITIAL_STATE
propTypes	components/Display.js	/^Display.propTypes = {$/;"	c	class:Display
propTypes	components/common/Background.js	/^Background.propTypes = {$/;"	c	class:Background
propTypes	components/playlist/PlaylistDock.js	/^PlaylistDock.propTypes = {$/;"	c	class:PlaylistDock
propTypes	components/stack/Sidebar.js	/^Sidebar.propTypes = {$/;"	c	class:Sidebar
propTypes	components/stack/StackDock.js	/^StackDock.propTypes = {$/;"	c	class:StackDock
propTypes	components/stack/StackItem.js	/^StackItem.propTypes = {$/;"	c	class:StackItem
propTypes	components/stack/StackList.js	/^StackList.propTypes = {$/;"	c	class:StackList
propTypes	util/AuthRoute.js	/^AuthRoute.propTypes = {$/;"	c	class:AuthRoute
propTypes	util/LinkButton.js	/^LinkButton.propTypes = {$/;"	c	class:LinkButton
redirect	util/AuthRoute.js	/^  redirect: PropTypes.string.isRequired,$/;"	p	class:AuthRoute.propTypes
reducers	redux/store.js	/^const reducers = combineReducers({$/;"	C
render	components/Display.js	/^  render() {$/;"	m	class:Display
render	components/landing/Login.js	/^  render() {$/;"	m	class:Login
render	components/landing/Signup.js	/^  render() {$/;"	m	class:Signup
render	components/playlist/PlaylistDock.js	/^  render() {$/;"	m	class:PlaylistDock
render	components/stack/Sidebar.js	/^  render() {$/;"	m	class:Sidebar
render	components/stack/StackContainer.js	/^  render() {$/;"	m	class:StackContainer
render	components/stack/StackDock.js	/^  render() {$/;"	m	class:StackDock
render	components/stack/StackItem.js	/^  render() {$/;"	m	class:StackItem
render	components/stack/StackList.js	/^  render() {$/;"	m	class:StackList
sessionBlockFetchData	components/stack/StackList.js	/^  sessionBlockFetchData: PropTypes.func.isRequired,$/;"	p	class:StackList.propTypes
sessionBlockFetchData	redux/actions/sessionActions.js	/^export const sessionBlockFetchData = (stackId) => (dispatch, getState) => {$/;"	C
sessionUserFetchData	redux/actions/sessionActions.js	/^export const sessionUserFetchData = () => (dispatch) => {$/;"	C
sessionUserLogin	redux/actions/sessionActions.js	/^export const sessionUserLogin = (credentials, history) => (dispatch) => {$/;"	C
sessionUserLogout	redux/actions/sessionActions.js	/^export const sessionUserLogout = () => (dispatch) => {$/;"	C
sessionUserSignup	redux/actions/sessionActions.js	/^export const sessionUserSignup = (newUserData, history) => (dispatch) => {$/;"	C
sessionUserUpdate	redux/actions/sessionActions.js	/^export const sessionUserUpdate = (userDetails) => (dispatch) => {$/;"	C
setAuthorizationHeader	redux/actions/sessionActions.js	/^const setAuthorizationHeader = (token) => {$/;"	C
sidebarVisible	redux/reducers/stackReducer.js	/^  sidebarVisible: true,$/;"	p	class:INITIAL_STATE
stackFocused	components/stack/StackDock.js	/^  stackFocused: PropTypes.string.isRequired,$/;"	p	class:StackDock.propTypes
stackFocused	components/stack/StackList.js	/^  stackFocused: PropTypes.string.isRequired,$/;"	p	class:StackList.propTypes
stackFocused	redux/reducers/stackReducer.js	/^  stackFocused: null,$/;"	p	class:INITIAL_STATE
stackId	components/stack/StackList.js	/^      stackId: '',$/;"	p	class:StackList.constructor.state
stackSetPopupVisibleCreateStack	redux/actions/stackActions.js	/^export const stackSetPopupVisibleCreateStack = () => (dispatch) => {$/;"	C
stackSetPopupVisibleEditStack	redux/actions/stackActions.js	/^export const stackSetPopupVisibleEditStack = () => (dispatch) => {$/;"	C
stackSetPopupVisibleOptionsSidebar	redux/actions/stackActions.js	/^export const stackSetPopupVisibleOptionsSidebar = () => (dispatch) => {$/;"	C
stackSetPopupVisibleOptionsStack	redux/actions/stackActions.js	/^export const stackSetPopupVisibleOptionsStack = () => (dispatch) => {$/;"	C
stackSetSiderbarVisible	redux/actions/stackActions.js	/^export const stackSetSiderbarVisible = () => (dispatch) => {$/;"	C
stackSetStackFocused	components/stack/Sidebar.js	/^  stackSetStackFocused: PropTypes.func.isRequired,$/;"	p	class:Sidebar.propTypes
stackSetStackFocused	redux/actions/stackActions.js	/^export const stackSetStackFocused = (stack) => (dispatch) => {$/;"	C
stacks	components/stack/Sidebar.js	/^  stacks: PropTypes.object.isRequired,$/;"	p	class:Sidebar.propTypes
stacks	components/stack/StackDock.js	/^  stacks: PropTypes.object.isRequired,$/;"	p	class:StackDock.propTypes
stacks	components/stack/StackList.js	/^  stacks: PropTypes.object.isRequired,$/;"	p	class:StackList.propTypes
stacks	redux/reducers/dataReducer.js	/^  stacks: {},$/;"	p	class:INITIAL_STATE
startNextBlock	components/playlist/PlaylistDock.js	/^  startNextBlock() {$/;"	m	class:PlaylistDock
startTimer	components/playlist/PlaylistDock.js	/^  startTimer() {$/;"	m	class:PlaylistDock
state	components/landing/Login.js	/^    this.state = {$/;"	c	class:Login.constructor
state	components/landing/Signup.js	/^    this.state = {$/;"	c	class:Signup.constructor
state	components/playlist/PlaylistDock.js	/^    this.state = {$/;"	c	class:PlaylistDock.constructor
state	components/stack/Sidebar.js	/^    this.state = {$/;"	c	class:Sidebar.constructor
state	components/stack/StackItem.js	/^    this.state = {$/;"	c	class:StackItem.constructor
state	components/stack/StackList.js	/^    this.state = {$/;"	c	class:StackList.constructor
store	redux/store.js	/^const store = createStore($/;"	C
task	components/stack/StackList.js	/^      task: '',$/;"	p	class:StackList.constructor.state
to	util/LinkButton.js	/^  to: PropTypes.string.isRequired,$/;"	p	class:LinkButton.propTypes
token	App.js	/^const token = localStorage.userToken;$/;"	C
transitionMode	components/playlist/PlaylistDock.js	/^  transitionMode() {$/;"	m	class:PlaylistDock
uploadImage	redux/actions/sessionActions.js	/^export const uploadImage = (formData) => (dispatch) => {$/;"	C
user	redux/reducers/sessionReducer.js	/^  user: {},$/;"	p	class:INITIAL_STATE
userToken	redux/actions/sessionActions.js	/^  const userToken = `Bearer ${token}`;$/;"	C
